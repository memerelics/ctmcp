%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 4.9. 進んだ話題
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% チャーチ・ロッサーの定理:
% 宣言的モデルにおいては，どんな還元順序であっても，計算が止まりさえすれば結果は同じになる

% 投機的実行: 必要になるかどうかわからんけど別スレッドで計算しておいて，必要ないとわかった時点で計算を打ち切る


% 4.9.3. 通信チャンネルとしてのデータフロー変数
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% データフロー変数すごいよね
% データフロー変数を入れることで表現力爆上がり

% 非同期送信: 変数を束縛すること．そのメッセージをどのスレッドが受信したかということとは無関係に，その束縛は行われる．
% 非同期受信: 束縛される前に変数を使うことに他ならない．

% 同期送信とは，束縛された変数についてその値が受信されるのを待つことである．
% 同期受信: 変数が束縛されるまで待つこと．そのスレッドが実行を続けるためには，その束縛が行われなければならない．

% ※ 同期送信捕捉 ある値がある操作によって必要とされたときに「受信された」と考える．

% ByNeed, Waitを使うことでこれら4パターンすべて実装できる．
